"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.APP_SETTINGS_PATH=void 0;exports.getAppSettingsForAppMode=getAppSettingsForAppMode;exports.hasAppSettingsForAppMode=hasAppSettingsForAppMode;var _debug=_interopRequireDefault(require("debug"));var _fs=require("fs");var _appSettingsPath=require("../args/app-settings-path");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const log=(0,_debug.default)('@sequencemedia/renderapp');const info=(0,_debug.default)('@sequencemedia/renderapp:app-settings');log('`@sequencemedia/renderapp:app-settings` is awake');function matchFor(appMode=''){const APP_MODE=appMode.toLowerCase();return function matchFor({AppMode=''}){return AppMode.toLowerCase()===APP_MODE;};}function hasAppSettingsForAppMode({Settings=[]}={},appMode='web'){info('hasAppSettingsForAppMode');return Settings.some(matchFor(appMode));}function getAppSettingsForAppMode({Settings=[]}={},appMode='web'){info('getAppSettingsForAppMode');return Settings.find(matchFor(appMode));}if(!(0,_appSettingsPath.hasAppSettingsPath)())throw new Error('App Settings path not provided');const APP_SETTINGS_PATH=(0,_appSettingsPath.getAppSettingsPath)();exports.APP_SETTINGS_PATH=APP_SETTINGS_PATH;const APP_SETTINGS=JSON.parse((0,_fs.readFileSync)(APP_SETTINGS_PATH));var _default=APP_SETTINGS;exports.default=_default;