"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _debug=_interopRequireDefault(require("debug"));var _path=_interopRequireDefault(require("path"));var _ultimateTextToImage=require("ultimate-text-to-image");var _socket=_interopRequireDefault(require("socket.io-client"));var _protocol=_interopRequireDefault(require("./protocol"));var _hostname=_interopRequireDefault(require("./hostname"));var _secure=_interopRequireDefault(require("./secure"));var _rulesMatrix=_interopRequireDefault(require("./rules-matrix"));var _appSettings=_interopRequireDefault(require("./app-settings"));var _appMode=_interopRequireDefault(require("./app-mode"));var _cachePath=_interopRequireDefault(require("./cache-path"));var _rabbitMq=require("./rabbit-mq");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const log=(0,_debug.default)('@sequencemedia/renderapp');log('`@sequencemedia/renderapp` is awake');const RULES_MATRIX=_rulesMatrix.default.slice(1);const FRONT_END_RULE=3;const NAME=15;const isTruthy=v=>!!(v||'').trim();const toFrontEndRule=v=>'+'.concat(v);function getNames(accumulator,rule){const{[NAME]:name}=RULES_MATRIX.find(({[FRONT_END_RULE]:frontEndRule})=>frontEndRule===toFrontEndRule(rule));return accumulator.concat(name);}const socket=_socket.default.connect(`${_protocol.default}://${_hostname.default}?token=visitor`,{secure:_secure.default,'sync disconnect on unload':true});var _default=(0,_rabbitMq.consume)((0,_rabbitMq.transformForRabbitMQ)((0,_rabbitMq.getRabbitMQFromSettingsForAppMode)(_appSettings.default,_appMode.default)),({content})=>{log('handler');const{Configuration:configuration,Width:width,Height:height,ImageName:imageName,Extension:extension='.jpg'}=content;const text=imageName+'\n\n'+configuration.split('+').filter(isTruthy).reduce(getNames,[]).join(' â€¢ ');const textToImage=new _ultimateTextToImage.UltimateTextToImage(text,{width,height,fontFamily:'Courier New',fontColor:0x00000000,fontSize:24,lineHeight:36,backgroundColor:0xffffffff,margin:24,align:'center',valign:'middle'});const fileName=imageName+extension;const filePath=_path.default.join(_cachePath.default,fileName);const fileType='image/jpeg';textToImage.render().toFile(filePath,fileType,{quality:100});socket.emit('imageResponseToServer',JSON.stringify(content));});exports.default=_default;