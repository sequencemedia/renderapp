"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"consume",{enumerable:true,get:function(){return _rabbitMq.consume;}});exports.getRabbitMQFromAppSettingsForAppMode=getRabbitMQFromAppSettingsForAppMode;Object.defineProperty(exports,"publish",{enumerable:true,get:function(){return _rabbitMq.publish;}});exports.transformForRabbitMQ=void 0;var _debug=_interopRequireDefault(require("debug"));var _rabbitMq=require("@sequencemedia/rabbit-mq");var _appSettings=require("../app-settings");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const log=(0,_debug.default)('@sequencemedia/renderapp');const info=(0,_debug.default)('@sequencemedia/renderapp:rabbit-mq');log('`@sequencemedia/renderapp:rabbit-mq` is awake');const transformForRabbitMQ=({Enabled:enabled,Port:port,HostName:hostname,UserName:username,Password:password,VirtualHost:virtualHost,Exchange:exchange,QueueName:queueName,RoutingKey:routingKey})=>({enabled,port,hostname,username,password,virtualHost,exchange,queueName,routingKey});exports.transformForRabbitMQ=transformForRabbitMQ;function getRabbitMQFromAppSettingsForAppMode(appSettings,appMode){info('getRabbitMQFromAppSettingsForAppMode');if((0,_appSettings.hasAppSettingsForAppMode)(appSettings,appMode)){const{RabbitMQData={}}=(0,_appSettings.getAppSettingsForAppMode)(appSettings,appMode);return RabbitMQData;}throw new Error(`RabbitMQ configuration was not found for AppMode "${appMode}"`);}